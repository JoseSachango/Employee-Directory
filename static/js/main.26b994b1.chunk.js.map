{"version":3,"sources":["components/employeedata.js","components/navbar.js","components/searchbox.js","utils/API.js","components/mainpage.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeData","props","className","onClick","sortByName","xmlns","width","height","fill","viewBox","d","data","map","employee","src","picture","thumbnail","alt","name","first","last","phone","email","dob","date","console","log","Navbar","class","SearchBox","type","value","fullName","placeholder","aria-label","aria-describedby","onChange","handleChange","axios","get","MainPage","state","result","resultOriginal","sortingByName","searchingByName","count","searchEmployees","API","then","res","setState","results","catch","err","sortEmployeesByName","sort","a","b","nameA","toUpperCase","nameB","handleInputChange","event","target","filter","includes","this","length","dataSearch","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26b994b1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\n\r\nfunction EmployeeData (props){\r\n    return (\r\n        //console.log(\"This is the props that was passed from mainpage:\",props)\r\n        \r\n       \r\n        <div className=\"container mt-5 \">\r\n\r\n            <div className=\"row mb-3 border-top border-bottom pb-3\">\r\n                <div className=\"col-sm font-weight-bold\">\r\n                    Image\r\n                </div>\r\n                <div className=\"col-sm font-weight-bold\">\r\n                    Name\r\n                    <button className=\"btn btn-link carrot\" onClick={props.sortByName}>\r\n\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-caret-down-fill pt-0 pb-0 carrot\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/>\r\n                        </svg>\r\n\r\n                    </button>\r\n                                    \r\n                </div>\r\n                <div className=\"col-sm font-weight-bold\">\r\n                    Phone\r\n                </div>\r\n                <div className=\"col-sm font-weight-bold\">\r\n                    Email\r\n                </div>\r\n                <div className=\"col-sm font-weight-bold\">\r\n                    DOB\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n\r\n            \r\n\r\n\r\n\r\n\r\n                props.data.map(employee=>(\r\n                  \r\n\r\n                  <div className=\"row mb-3 border-bottom pb-3 \" key={employee.email}>\r\n                      <div className=\"col-sm font-weight-bold\">\r\n                          <img src={employee.picture.thumbnail} alt={employee.name.first} width=\"50\" height=\"50\" />\r\n                      </div>\r\n                      <div className=\"col-sm font-weight-bold\">\r\n                          <p>{employee.name.first} {employee.name.last}</p>\r\n                      \r\n                      </div>\r\n                      <div className=\"col-sm font-weight-bold\">\r\n                         <p>\r\n                          {employee.phone}\r\n                         </p> \r\n                      </div>\r\n                      <div className=\"col-sm font-weight-bold\">\r\n                          <p>{employee.email}</p>\r\n                      </div>\r\n                      <div className=\"col-sm font-weight-bold\">\r\n                          <p>\r\n                              {employee.dob.date}\r\n                          </p>\r\n                      </div>\r\n                  </div>\r\n\r\n\r\n              ))\r\n            }\r\n\r\n            \r\n            {console.log(props.data)}\r\n            \r\n\r\n            \r\n\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default EmployeeData;\r\n","import React from \"react\"\r\n\r\n\r\n\r\nfunction Navbar (){\r\n\r\n    return (\r\n        <>\r\n       \r\n        <div class=\"jumbotron jumbotron-fluid mb-2\">\r\n            <div class=\"container text-center\">\r\n                <h1 class=\"display-4 mx-auto\">Employee Directory</h1>\r\n                <p class=\"lead mx-auto\">Click the carrots to filter by heading or use the search box to narrow your results.</p>\r\n            </div>\r\n        </div>\r\n        \r\n\r\n\r\n        \r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction SearchBox(props){\r\n\r\n    return (\r\n        <div class=\"input-group flex-nowrap w-25 mx-auto mt-0\">\r\n            \r\n            <input type=\"text\" value={props.fullName} name=\"fullName\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"addon-wrapping\" onChange={props.handleChange} />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default SearchBox;\r\n","import axios from \"axios\";\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    // Gets all users\r\n    getUsers: function() {\r\n      return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n    }\r\n  };","import React from \"react\";\r\nimport EmployeeData from \"./employeedata\";\r\nimport Navbar from \"./navbar\";\r\nimport SearchBox from \"./searchbox\";\r\nimport API from \"../utils/API\";\r\n\r\n/*\r\n\r\n sortingByName: {},\r\n        searchingByName: {}\r\n*/\r\n\r\n\r\nclass MainPage extends React.Component {\r\n\r\n    //what is a good strategy for know what key:value pairs to put into your state object? How do you know what to keep track of?\r\n    //modify the state that I get back from the API call by sorting by name and searching by name\r\n    state = {\r\n\r\n        result: [],\r\n        resultOriginal:[],\r\n        sortingByName: [],\r\n        searchingByName:[],\r\n        count: -1,\r\n        fullName: \"\",\r\n        \r\n        \r\n       \r\n    }\r\n\r\n    //Why is it we have to handle all the queries here and we can't pass queries like props?\r\n    componentDidMount() {\r\n        this.searchEmployees();\r\n    }\r\n\r\n      //how come you can't write this in the format function searchEmployees (){...}?\r\n    searchEmployees = ()=>{\r\n        //how come you don't have to return the query below, but we return values from other functions?\r\n        //inside of classess setState merges state property nicely*\r\n        API.getUsers()\r\n            .then(res=>this.setState({result: res.data.results,resultOriginal:res.data.results,searchingByName:res.data.results}))\r\n            .catch(err=>{console.log(\"The query threw an err: \",err)})\r\n\r\n    }\r\n\r\n    sortEmployeesByName = ()=>{\r\n        \r\n        console.log(\"This is the count state: \",this.state.count)\r\n        switch(this.state.count){\r\n            case -1:\r\n                this.setState({result:this.state.result\r\n                    .sort(function(a, b) {\r\n                        var nameA = a.name.first.toUpperCase()+a.name.last.toUpperCase(); // ignore upper and lowercase\r\n                        var nameB = b.name.first.toUpperCase()+b.name.last.toUpperCase(); // ignore upper and lowercase\r\n                        if (nameA < nameB) {\r\n                          return -1;\r\n                        }\r\n                        if (nameA > nameB) {\r\n                          return 1;\r\n                        }\r\n                      \r\n                        // names must be equal\r\n                        return 0;\r\n                      })\r\n                });\r\n\r\n                this.setState({count:1})\r\n\r\n                break;\r\n            case 1:\r\n\r\n                this.setState({result:this.state.result\r\n                    .sort(function(a, b) {\r\n                        var nameA = a.name.first.toUpperCase()+a.name.last.toUpperCase(); // ignore upper and lowercase\r\n                        var nameB = b.name.first.toUpperCase()+b.name.last.toUpperCase(); // ignore upper and lowercase\r\n                        if (nameA < nameB) {\r\n                          return 1;\r\n                        }\r\n                        if (nameA > nameB) {\r\n                          return -1;\r\n                        }\r\n                      \r\n                        // names must be equal\r\n                        return 0;\r\n                      })\r\n                });\r\n\r\n                this.setState({count:-1})\r\n\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n  \r\n    }\r\n\r\n\r\n    handleInputChange = (event) => {\r\n        const {name,value} = event.target\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n\r\n\r\n        this.setState({searchingByName: this.state.resultOriginal.filter(employee => employee.name.first.includes(value)||employee.name.last.includes(value))})\r\n\r\n        \r\n    };\r\n\r\n    render () {\r\n\r\n        if(this.state.fullName.length>0&&this.state.searchingByName.length>0){\r\n            return (\r\n                <>\r\n                    <Navbar />\r\n                    <SearchBox fullName={this.state.fullName} handleChange={this.handleInputChange}/>\r\n                    <EmployeeData data={this.state.searchingByName} sortByName={this.sortEmployeesByName} dataSearch={this.state.searchingByName}  fullName={this.state.fullName} />\r\n                </>\r\n            ) \r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <Navbar />\r\n                <SearchBox fullName={this.state.fullName} handleChange={this.handleInputChange}/>\r\n                <EmployeeData data={this.state.result} sortByName={this.sortEmployeesByName} dataSearch={this.state.searchingByName}  fullName={this.state.fullName} />\r\n            </>\r\n        ) \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MainPage;","//import logo from './logo.svg';\nimport './App.css';\nimport MainPage from \"./components/mainpage.js\";\n\nfunction App() {\n  return <MainPage />\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}